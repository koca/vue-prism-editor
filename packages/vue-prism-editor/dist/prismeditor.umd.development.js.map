{"version":3,"file":"prismeditor.umd.development.js","sources":["../src/Editor.ts"],"sourcesContent":["import Vue, { VNode } from 'vue';\r\n\r\nimport './styles.css';\r\nconst KEYCODE_ENTER = 13;\r\nconst KEYCODE_TAB = 9;\r\nconst KEYCODE_BACKSPACE = 8;\r\nconst KEYCODE_Y = 89;\r\nconst KEYCODE_Z = 90;\r\nconst KEYCODE_M = 77;\r\nconst KEYCODE_ESCAPE = 27;\r\n\r\nconst BRACKET_PAIRS: {[opening: string]: string} = {\r\n  '(':')',\r\n  '{':'}',\r\n  '[':']',\r\n  '\"':'\"',\r\n  \"'\":\"'\",\r\n};\r\n\r\nconst HISTORY_LIMIT = 100;\r\nconst HISTORY_TIME_GAP = 3000;\r\n\r\nconst isWindows = 'navigator' in global && /Win/i.test(navigator.platform);\r\nconst isMacLike = 'navigator' in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\r\n\r\nexport interface EditorProps {\r\n  lineNumbers: boolean;\r\n  autoStyleLineNumbers: boolean;\r\n  readonly: boolean;\r\n  value: string;\r\n  highlight: () => string;\r\n  tabSize: number;\r\n  insertSpaces: boolean;\r\n  ignoreTabKey: boolean;\r\n  placeholder: string;\r\n}\r\nexport interface Record {\r\n  value: string;\r\n  selectionStart: number;\r\n  selectionEnd: number;\r\n}\r\n\r\nexport interface History {\r\n  stack: Array<Record & { timestamp: number }>;\r\n  offset: number;\r\n}\r\n\r\nexport const PrismEditor = Vue.extend({\r\n  props: {\r\n    lineNumbers: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    autoStyleLineNumbers: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    readonly: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    value: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    highlight: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n    tabSize: {\r\n      type: Number,\r\n      default: 2,\r\n    },\r\n    insertSpaces: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    ignoreTabKey: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      capture: true,\r\n      history: {\r\n        stack: [],\r\n        offset: -1,\r\n      } as History,\r\n      lineNumbersHeight: '20px',\r\n      codeData: '',\r\n    };\r\n  },\r\n  watch: {\r\n    value: {\r\n      immediate: true,\r\n      handler(newVal: string): void {\r\n        if (!newVal) {\r\n          this.codeData = '';\r\n        } else {\r\n          this.codeData = newVal;\r\n        }\r\n      },\r\n    },\r\n    content: {\r\n      immediate: true,\r\n      handler(): void {\r\n        if (this.lineNumbers) {\r\n          this.$nextTick(() => {\r\n            this.setLineNumbersHeight();\r\n          });\r\n        }\r\n      },\r\n    },\r\n    lineNumbers(): void {\r\n      this.$nextTick(() => {\r\n        this.styleLineNumbers();\r\n        this.setLineNumbersHeight();\r\n      });\r\n    },\r\n  },\r\n  computed: {\r\n    isEmpty(): boolean {\r\n      return this.codeData.length === 0;\r\n    },\r\n    content(): string {\r\n      const result = this.highlight(this.codeData) + '<br />';\r\n      // todo: VNode support?\r\n      return result;\r\n    },\r\n    lineNumbersCount(): number {\r\n      const totalLines = this.codeData.split(/\\r\\n|\\n/).length;\r\n      return totalLines;\r\n    },\r\n  },\r\n  mounted() {\r\n    this._recordCurrentState();\r\n    this.styleLineNumbers();\r\n  },\r\n\r\n  methods: {\r\n    setLineNumbersHeight(): void {\r\n      this.lineNumbersHeight = getComputedStyle(this.$refs.pre as HTMLTextAreaElement).height;\r\n    },\r\n    styleLineNumbers(): void {\r\n      if (!this.lineNumbers || !this.autoStyleLineNumbers) return;\r\n\r\n      const $editor = this.$refs.pre as HTMLTextAreaElement;\r\n      const $lineNumbers: HTMLDivElement | null = this.$el.querySelector('.prism-editor__line-numbers');\r\n      const editorStyles = window.getComputedStyle($editor);\r\n\r\n      this.$nextTick(() => {\r\n        const btlr: any = 'border-top-left-radius';\r\n        const bblr: any = 'border-bottom-left-radius';\r\n        if (!$lineNumbers) return;\r\n        $lineNumbers.style[btlr] = editorStyles[btlr];\r\n        $lineNumbers.style[bblr] = editorStyles[bblr];\r\n        $editor.style[btlr] = '0';\r\n        $editor.style[bblr] = '0';\r\n\r\n        const stylesList = ['background-color', 'margin-top', 'padding-top', 'font-family', 'font-size', 'line-height'];\r\n        stylesList.forEach((style: any) => {\r\n          $lineNumbers.style[style] = editorStyles[style];\r\n        });\r\n        $lineNumbers.style['margin-bottom' as any] = '-' + editorStyles['padding-top' as any];\r\n      });\r\n    },\r\n    _recordCurrentState(): void {\r\n      const input = this.$refs.textarea as HTMLTextAreaElement;\r\n\r\n      if (!input) return;\r\n      // Save current state of the input\r\n      const { value, selectionStart, selectionEnd } = input;\r\n\r\n      this._recordChange({\r\n        value,\r\n        selectionStart,\r\n        selectionEnd,\r\n      });\r\n    },\r\n    _getLines(text: string, position: number): Array<string> {\r\n      return text.substring(0, position).split('\\n');\r\n    },\r\n    _recordStateIfChange(): void {\r\n      if (this.history.stack[this.history.offset].value != this.codeData) {\r\n        this._recordChange({\r\n          value: this.codeData,\r\n          selectionStart: this.codeData.length,\r\n          selectionEnd: this.codeData.length,\r\n        });\r\n      }\r\n    },\r\n    _applyEdits(record: Record): void {\r\n      // Save last selection state\r\n      const input = this.$refs.textarea as HTMLTextAreaElement;\r\n      const last = this.history.stack[this.history.offset];\r\n\r\n      if (last && input) {\r\n        this.history.stack[this.history.offset] = {\r\n          ...last,\r\n          selectionStart: input.selectionStart,\r\n          selectionEnd: input.selectionEnd,\r\n        };\r\n      }\r\n\r\n      // Save the changes\r\n      this._recordChange(record);\r\n      this._updateInput(record);\r\n    },\r\n    _recordChange(record: Record, overwrite = false): void {\r\n      const { stack, offset } = this.history;\r\n\r\n      if (stack.length && offset > -1) {\r\n        // When something updates, drop the redo operations\r\n        this.history.stack = stack.slice(0, offset + 1);\r\n\r\n        // Limit the number of operations to 100\r\n        const count = this.history.stack.length;\r\n\r\n        if (count > HISTORY_LIMIT) {\r\n          const extras = count - HISTORY_LIMIT;\r\n\r\n          this.history.stack = stack.slice(extras, count);\r\n          this.history.offset = Math.max(this.history.offset - extras, 0);\r\n        }\r\n      }\r\n\r\n      const timestamp = Date.now();\r\n\r\n      if (overwrite) {\r\n        const last = this.history.stack[this.history.offset];\r\n\r\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\r\n          // A previous entry exists and was in short interval\r\n\r\n          // Match the last word in the line\r\n          const re = /[^a-z0-9]([a-z0-9]+)$/i;\r\n\r\n          // Get the previous line\r\n          const previous = this._getLines(last.value, last.selectionStart).pop()?.match(re);\r\n\r\n          // Get the current line\r\n          const current = this._getLines(record.value, record.selectionStart).pop()?.match(re);\r\n\r\n          if (previous && current && current[1].startsWith(previous[1])) {\r\n            // The last word of the previous line and current line match\r\n            // Overwrite previous entry so that undo will remove whole word\r\n            this.history.stack[this.history.offset] = {\r\n              ...record,\r\n              timestamp,\r\n            };\r\n\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Add the new operation to the stack\r\n      this.history.stack.push({ ...record, timestamp });\r\n      this.history.offset++;\r\n    },\r\n\r\n    _updateInput(record: Record): void {\r\n      const input = this.$refs.textarea as HTMLTextAreaElement;\r\n\r\n      if (!input) return;\r\n\r\n      // Update values and selection state\r\n      input.value = record.value;\r\n      input.selectionStart = record.selectionStart;\r\n      input.selectionEnd = record.selectionEnd;\r\n\r\n      this.$emit('input', record.value);\r\n      // this.props.onValueChange(record.value);\r\n    },\r\n    handleChange(e: KeyboardEvent): void {\r\n      const { value, selectionStart, selectionEnd } = e.target as HTMLTextAreaElement;\r\n\r\n      this._recordChange(\r\n        {\r\n          value,\r\n          selectionStart,\r\n          selectionEnd,\r\n        },\r\n        true\r\n      );\r\n      this.$emit('input', value);\r\n      // this.props.onValueChange(value);\r\n    },\r\n    _undoEdit(): void {\r\n      const { stack, offset } = this.history;\r\n\r\n      // Get the previous edit\r\n      const record = stack[offset - 1];\r\n\r\n      if (record) {\r\n        // Apply the changes and update the offset\r\n        this._updateInput(record);\r\n        this.history.offset = Math.max(offset - 1, 0);\r\n      }\r\n    },\r\n    _redoEdit(): void {\r\n      const { stack, offset } = this.history;\r\n\r\n      // Get the next edit\r\n      const record = stack[offset + 1];\r\n\r\n      if (record) {\r\n        // Apply the changes and update the offset\r\n        this._updateInput(record);\r\n        this.history.offset = Math.min(offset + 1, stack.length - 1);\r\n      }\r\n    },\r\n    handleKeyDown(e: KeyboardEvent): void {\r\n      // console.log(navigator.platform);\r\n      const { tabSize, insertSpaces, ignoreTabKey } = this;\r\n\r\n      if (this.$listeners.keydown) {\r\n        // onKeyDown(e);\r\n        this.$emit('keydown', e);\r\n\r\n        if (e.defaultPrevented) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (e.keyCode === KEYCODE_ESCAPE) {\r\n        (<HTMLTextAreaElement>e.target).blur();\r\n        this.$emit('blur', e);\r\n      }\r\n\r\n      const { value, selectionStart, selectionEnd } = e.target as HTMLTextAreaElement;\r\n\r\n      const tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\r\n\r\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.capture) {\r\n        // Prevent focus change\r\n        e.preventDefault();\r\n\r\n        if (e.shiftKey) {\r\n          // Unindent selected lines\r\n          const linesBeforeCaret = this._getLines(value, selectionStart);\r\n          const startLine = linesBeforeCaret.length - 1;\r\n          const endLine = this._getLines(value, selectionEnd).length - 1;\r\n          const nextValue = value\r\n            .split('\\n')\r\n            .map((line, i) => {\r\n              if (i >= startLine && i <= endLine && line.startsWith(tabCharacter)) {\r\n                return line.substring(tabCharacter.length);\r\n              }\r\n\r\n              return line;\r\n            })\r\n            .join('\\n');\r\n\r\n          if (value !== nextValue) {\r\n            const startLineText = linesBeforeCaret[startLine];\r\n\r\n            this._applyEdits({\r\n              value: nextValue,\r\n              // Move the start cursor if first line in selection was modified\r\n              // It was modified only if it started with a tab\r\n              selectionStart: startLineText.startsWith(tabCharacter)\r\n                ? selectionStart - tabCharacter.length\r\n                : selectionStart,\r\n              // Move the end cursor by total number of characters removed\r\n              selectionEnd: selectionEnd - (value.length - nextValue.length),\r\n            });\r\n          }\r\n        } else if (selectionStart !== selectionEnd) {\r\n          // Indent selected lines\r\n          const linesBeforeCaret = this._getLines(value, selectionStart);\r\n          const startLine = linesBeforeCaret.length - 1;\r\n          const endLine = this._getLines(value, selectionEnd).length - 1;\r\n          const startLineText = linesBeforeCaret[startLine];\r\n\r\n          this._applyEdits({\r\n            value: value\r\n              .split('\\n')\r\n              .map((line, i) => {\r\n                if (i >= startLine && i <= endLine) {\r\n                  return tabCharacter + line;\r\n                }\r\n\r\n                return line;\r\n              })\r\n              .join('\\n'),\r\n            // Move the start cursor by number of characters added in first line of selection\r\n            // Don't move it if it there was no text before cursor\r\n            selectionStart: /\\S/.test(startLineText) ? selectionStart + tabCharacter.length : selectionStart,\r\n            // Move the end cursor by total number of characters added\r\n            selectionEnd: selectionEnd + tabCharacter.length * (endLine - startLine + 1),\r\n          });\r\n        } else {\r\n          const updatedSelection = selectionStart + tabCharacter.length;\r\n\r\n          this._applyEdits({\r\n            // Insert tab character at caret\r\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\r\n            // Update caret position\r\n            selectionStart: updatedSelection,\r\n            selectionEnd: updatedSelection,\r\n          });\r\n        }\r\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\r\n        const hasSelection = selectionStart !== selectionEnd;\r\n        const textBeforeCaret = value.substring(0, selectionStart);\r\n\r\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\r\n          // Prevent default delete behaviour\r\n          e.preventDefault();\r\n\r\n          const updatedSelection = selectionStart - tabCharacter.length;\r\n\r\n          this._applyEdits({\r\n            // Remove tab character at caret\r\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\r\n            // Update caret position\r\n            selectionStart: updatedSelection,\r\n            selectionEnd: updatedSelection,\r\n          });\r\n        }\r\n      } else if (e.keyCode === KEYCODE_ENTER) {\r\n        // Ignore selections\r\n        if (selectionStart === selectionEnd) {\r\n          // Get the current line\r\n          const line = this._getLines(value, selectionStart).pop();\r\n          const matches = line?.match(/^\\s+/);\r\n\r\n          if (matches && matches[0]) {\r\n            e.preventDefault();\r\n\r\n            // Preserve indentation on inserting a new line\r\n            const indent = '\\n' + matches[0];\r\n            const updatedSelection = selectionStart + indent.length;\r\n\r\n            this._applyEdits({\r\n              // Insert indentation character at caret\r\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\r\n              // Update caret position\r\n              selectionStart: updatedSelection,\r\n              selectionEnd: updatedSelection,\r\n            });\r\n          }\r\n        }\r\n      } else if (BRACKET_PAIRS[e.key]) {\r\n        // If text is selected, wrap them in the characters\r\n        if (selectionStart !== selectionEnd) {\r\n          e.preventDefault();\r\n\r\n          this._applyEdits({\r\n            value:\r\n              value.substring(0, selectionStart) +\r\n              e.key +\r\n              value.substring(selectionStart, selectionEnd) +\r\n              BRACKET_PAIRS[e.key] +\r\n              value.substring(selectionEnd),\r\n            // Update caret position\r\n            selectionStart: selectionStart + 1,\r\n            selectionEnd: selectionEnd + 1,\r\n          });\r\n        }\r\n      } else if (\r\n        (isMacLike\r\n          ? // Trigger undo with ⌘+Z on Mac\r\n            e.metaKey && e.keyCode === KEYCODE_Z\r\n          : // Trigger undo with Ctrl+Z on other platforms\r\n            e.ctrlKey && e.keyCode === KEYCODE_Z) &&\r\n        !e.shiftKey &&\r\n        !e.altKey\r\n      ) {\r\n        e.preventDefault();\r\n\r\n        this._undoEdit();\r\n      } else if (\r\n        (isMacLike\r\n          ? // Trigger redo with ⌘+Shift+Z on Mac\r\n            e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\r\n          : isWindows\r\n          ? // Trigger redo with Ctrl+Y on Windows\r\n            e.ctrlKey && e.keyCode === KEYCODE_Y\r\n          : // Trigger redo with Ctrl+Shift+Z on other platforms\r\n            e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\r\n        !e.altKey\r\n      ) {\r\n        e.preventDefault();\r\n\r\n        this._redoEdit();\r\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\r\n        e.preventDefault();\r\n\r\n        // Toggle capturing tab key so users can focus away\r\n        this.capture = !this.capture;\r\n      }\r\n    },\r\n  },\r\n  render(h): VNode {\r\n    const lineNumberWidthCalculator = h(\r\n      'div',\r\n      {\r\n        attrs: {\r\n          class: 'prism-editor__line-width-calc',\r\n          style: 'height: 0px; visibility: hidden; pointer-events: none;',\r\n        },\r\n      },\r\n      '999'\r\n    );\r\n    const lineNumbers = h(\r\n      'div',\r\n      {\r\n        staticClass: 'prism-editor__line-numbers',\r\n        style: {\r\n          'min-height': this.lineNumbersHeight,\r\n        },\r\n        attrs: {\r\n          'aria-hidden': 'true',\r\n        },\r\n      },\r\n      [\r\n        lineNumberWidthCalculator,\r\n        Array.from(Array(this.lineNumbersCount).keys()).map((_, index) => {\r\n          return h('div', { attrs: { class: 'prism-editor__line-number token comment' } }, `${++index}`);\r\n        }),\r\n      ]\r\n    );\r\n\r\n    const textarea = h('textarea', {\r\n      ref: 'textarea',\r\n      on: {\r\n        input: this.handleChange,\r\n        keydown: this.handleKeyDown,\r\n        click: ($event: MouseEvent) => {\r\n          this.$emit('click', $event);\r\n        },\r\n        keyup: ($event: KeyboardEvent) => {\r\n          this.$emit('keyup', $event);\r\n        },\r\n        focus: ($event: FocusEvent) => {\r\n          this._recordStateIfChange();\r\n          this.$emit('focus', $event);\r\n        },\r\n        blur: ($event: FocusEvent) => {\r\n          this.$emit('blur', $event);\r\n        },\r\n      },\r\n      staticClass: 'prism-editor__textarea',\r\n      class: {\r\n        'prism-editor__textarea--empty': this.isEmpty,\r\n      },\r\n      attrs: {\r\n        spellCheck: 'false',\r\n        autocapitalize: 'off',\r\n        autocomplete: 'off',\r\n        autocorrect: 'off',\r\n        'data-gramm': 'false',\r\n        placeholder: this.placeholder,\r\n        'data-testid': 'textarea',\r\n        readonly: this.readonly,\r\n      },\r\n      domProps: {\r\n        value: this.codeData,\r\n      },\r\n    });\r\n    const preview = h('pre', {\r\n      ref: 'pre',\r\n      staticClass: 'prism-editor__editor',\r\n      attrs: {\r\n        'data-testid': 'preview',\r\n      },\r\n      domProps: {\r\n        innerHTML: this.content,\r\n      },\r\n    });\r\n    const editorContainer = h('div', { staticClass: 'prism-editor__container' }, [textarea, preview]);\r\n    return h('div', { staticClass: 'prism-editor-wrapper' }, [this.lineNumbers && lineNumbers, editorContainer]);\r\n  },\r\n});\r\n"],"names":["KEYCODE_ENTER","KEYCODE_TAB","KEYCODE_BACKSPACE","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_ESCAPE","BRACKET_PAIRS","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","global","test","navigator","platform","isMacLike","PrismEditor","Vue","extend","props","lineNumbers","type","Boolean","autoStyleLineNumbers","readonly","value","String","highlight","Function","required","tabSize","Number","insertSpaces","ignoreTabKey","placeholder","data","capture","history","stack","offset","lineNumbersHeight","codeData","watch","immediate","handler","newVal","content","$nextTick","setLineNumbersHeight","styleLineNumbers","computed","isEmpty","length","result","lineNumbersCount","totalLines","split","mounted","_recordCurrentState","methods","getComputedStyle","$refs","pre","height","$editor","$lineNumbers","$el","querySelector","editorStyles","window","btlr","bblr","style","stylesList","forEach","input","textarea","selectionStart","selectionEnd","_recordChange","_getLines","text","position","substring","_recordStateIfChange","_applyEdits","record","last","_updateInput","overwrite","slice","count","extras","Math","max","timestamp","Date","now","re","previous","pop","match","current","startsWith","push","$emit","handleChange","e","target","_undoEdit","_redoEdit","min","handleKeyDown","$listeners","keydown","defaultPrevented","keyCode","blur","tabCharacter","repeat","preventDefault","shiftKey","linesBeforeCaret","startLine","endLine","nextValue","map","line","i","join","startLineText","updatedSelection","hasSelection","textBeforeCaret","endsWith","matches","indent","key","metaKey","ctrlKey","altKey","render","h","lineNumberWidthCalculator","attrs","staticClass","Array","from","keys","_","index","ref","on","click","$event","keyup","focus","spellCheck","autocapitalize","autocomplete","autocorrect","domProps","preview","innerHTML","editorContainer"],"mappings":"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"}